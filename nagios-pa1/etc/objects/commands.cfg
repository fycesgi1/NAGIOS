################################################################################
#
# SAMPLE NOTIFICATION COMMANDS
#
# These are some example notification commands.  They may or may not work on
# your system without modification.  As an example, some systems will require 
# you to use "/usr/bin/mailx" instead of "/usr/bin/mail" in the commands below.
#
################################################################################


# 'notify-host-by-email' command definition
define command{
	command_name	notify-host-by-email
	command_line	/usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **" $CONTACTEMAIL$
	}

# 'notify-service-by-email' command definition
define command{
	command_name	notify-service-by-email
	command_line	/usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
	}

# 'notify-host-by-sms' command definition
define command{
        command_name    notify-host-by-sms
        command_line    /u/prog/nagios/libexec/sendsms.sh $CONTACTPAGER$ "$NOTIFICATIONTYPE$ on $HOSTNAME$ State:$HOSTSTATE$ Time: $LONGDATETIME$"
}

# 'notify-service-by-sms' command definition
define command{
        command_name    notify-service-by-sms
        command_line    /u/prog/nagios/libexec/sendsms.sh $CONTACTPAGER$ "$NOTIFICATIONTYPE$ on $HOSTNAME$ Service:$SERVICEDESC$ State:$SERVICESTATE$ Time: $LONGDATETIME$"
}


################################################################################
#
# SAMPLE HOST CHECK COMMANDS
#
################################################################################


# This command checks to see if a host is "alive" by pinging it
# The check must result in a 100% packet loss or 5 second (5000ms) round trip 
# average time to produce a critical error.
# Note: Five ICMP echo packets are sent (determined by the '-p 5' argument)

# 'check-host-alive' command definition
define command{
        command_name    check-host-alive
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5
        }




################################################################################
#
# SAMPLE SERVICE CHECK COMMANDS
#
# These are some example service check commands.  They may or may not work on
# your system, as they must be modified for your plugins.  See the HTML 
# documentation on the plugins for examples of how to configure command definitions.
#
# NOTE:  The following 'check_local_...' functions are designed to monitor
#        various metrics on the host that Nagios is running on (i.e. this one).
################################################################################

# 'check_local_disk' command definition
define command{
        command_name    check_local_disk
        command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
        }


# 'check_local_load' command definition
define command{
        command_name    check_local_load
        command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
        }


# 'check_local_procs' command definition
define command{
        command_name    check_local_procs
        command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$
        }


define command{
        command_name    check_cert
        command_line    $USER1$/check_ssl_cert -p $ARG1$ -H $HOSTADDRESS$ --noauth --ignore-ocsp
}

define command{
        command_name    check_cert2
        command_line    $USER1$/check_ssl_cert -p 443 -H $HOSTADDRESS$ --noauth --ignore-ocsp
}

# 'check_local_users' command definition
define command{
        command_name    check_local_users
        command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
        }


# 'check_local_swap' command definition
define command{
	command_name	check_local_swap
	command_line	$USER1$/check_swap -w $ARG1$ -c $ARG2$
	}


# 'check_local_mrtgtraf' command definition
define command{
	command_name	check_local_mrtgtraf
	command_line	$USER1$/check_mrtgtraf -F $ARG1$ -a $ARG2$ -w $ARG3$ -c $ARG4$ -e $ARG5$
	}


################################################################################
# NOTE:  The following 'check_...' commands are used to monitor services on
#        both local and remote hosts.
################################################################################

# 'check_ftp' command definition
define command{
        command_name    check_ftp
        command_line    $USER1$/check_ftp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_hpjd' command definition
define command{
        command_name    check_hpjd
        command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ $ARG1$
        }


# 'check_snmp' command definition
define command{
        command_name    check_snmp
        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ $ARG1$
        }

define command{
        command_name    check_snmp2
        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ -C $ARG1$ -o $ARG2$ -w $ARG3$ -c $ARG4$ -u "$ARG5$" -l "$ARG6$"
        }

# 'check_lx_mem' command definition
define command{
        command_name    check_lx_mem
        command_line    $USER1$/check_lx_mem $HOSTADDRESS$ $ARG1$ $ARG2$ $ARG3$
        }


# 'check_http' command definition
define command{
        command_name    check_http
        command_line    $USER1$/check_http -I $HOSTADDRESS$ $ARG1$
        }

define command{
        command_name    check_https
        command_line    $USER1$/check_https -I $HOSTNAME$ $ARG1$
        }

define command{
        command_name    check_https_curl
        command_line    $USER1$/check_https_curl -I https://$HOSTNAME$ $ARG1$
        }

# 'check_ssh' command definition
define command{
	command_name	check_ssh
	command_line	$USER1$/check_ssh $ARG1$ $HOSTADDRESS$
	}


# 'check_dhcp' command definition
define command{
	command_name	check_dhcp
	command_line	$USER1$/check_dhcp $ARG1$
	}


# 'check_ping' command definition
define command{
        command_name    check_ping
        command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
        }

define command{
        command_name    check_ping_dst
        command_line    $USER1$/check_ping -H $ARG3$ -w $ARG1$ -c $ARG2$ -p 5
        }

# 'check_pop' command definition
define command{
        command_name    check_pop
        command_line    $USER1$/check_pop -H $HOSTADDRESS$ $ARG1$
        }


# 'check_imap' command definition
define command{
        command_name    check_imap
        command_line    $USER1$/check_imap -H $HOSTADDRESS$ $ARG1$
        }


# 'check_smtp' command definition
define command{
        command_name    check_smtp
        command_line    $USER1$/check_smtp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_tcp' command definition
define command{
	command_name	check_tcp
	command_line	$USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
	}

# 'check_tcp_ext' command definition
define command{
        command_name    check_tcp_ext
        command_line    $USER1$/check_tcp -H $ARG1$ -p $ARG2$
        }

# 'check_udp' command definition
define command{
	command_name	check_udp
	command_line	$USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
	}


# 'check_nt' command definition
define command{
	command_name	check_nt
	command_line	$USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -v $ARG1$ $ARG2$
	}

define command{
        command_name    rotate_ndo_log
        command_line    /bin/mv /u/prog/nagios/var/ndo.dat /u/prog/nagios/var/ndo.`date +%s`
        }

# 'check_hp' command definition
define command{
        command_name    check_hp
        command_line    $USER1$/check_hpasm --hostname $HOSTADDRESS$ --community $ARG1$
        }

# 'check_hp_msa' command definition
define command{
        command_name    check_hp_msa
        command_line    $USER1$/check_hp_msa.sh -H $HOSTADDRESS$ -C $ARG1$ -T $ARG2$
        }

#'check_hpmemoryfree' commnand definition
define command{
        command_name    check_hpmemoryfree
        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ -C $ARG1$ -o .1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1.1.6.1 -w $ARG2$ -c $ARG3$ -u bytes -l free
}

#'check_hpcpu' commnand definition
define command{
        command_name    check_hpcpu
        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ -C $ARG1$ -o .1.3.6.1.4.1.11.2.14.11.5.1.9.6.1.0 -t 5 -w $ARG2$ -c $ARG3$ -u % -l '5min CPU'
}

#'check_hpfan' commnand definition
define command{
        command_name    check_hpfan
        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ -C $ARG1$ -o .1.3.6.1.4.1.11.2.14.11.1.2.6.1.4.1 -w $ARG2$ -c $ARG3$ -l 'Fan Status'
}

#'check_hppower' commnand definition
define command{
        command_name    check_hppower1
        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ -C $ARG1$ -o .1.3.6.1.4.1.11.2.14.11.1.2.6.1.4.2 -w $ARG2$ -c $ARG3$ -l 'Power Supply 1 Status'
}

#'check_hptemp' commnand definition
define command{
        command_name    check_hppower2
        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ -C $ARG1$ -o .1.3.6.1.4.1.11.2.14.11.1.2.6.1.4.3 -w $ARG2$ -c $ARG3$ -l 'Power Supply 2 Status'
}

# 'check_mysql_health' command definition
define command{
        command_name    check_mysql_health
        command_line    $USER1$/check_mysql_health --username $ARG1$ --password $ARG2$ --mode $ARG3$ --warning $ARG4$ --critical $ARG5$
        }

# 'check_dns' command definition
define command{
        command_name    check_dns
        command_line    $USER1$/check_dns -H www.yahoo.com -s $HOSTADDRESS$
        }

# 'check_mysql' command definition
define command{
        command_name    check_mysql
        command_line    $USER1$/check_mysql -H $HOSTADDRESS$ -u $ARG1$ -p $ARG2$
        }

# 'check_process_snmp' command definition
define command{
        command_name    check_process_snmp
        command_line    $USER1$/check_process_snmp $HOSTADDRESS$ $ARG1$ $ARG2$
        }

# 'check_memory_snmp' command definition
define command{
        command_name    check_memory_snmp
        command_line    $USER1$/check_memory_snmp $HOSTADDRESS$ $ARG1$ $ARG2$ $ARG3$
        }

# 'check_cpuload_snmp' command definition
define command{
        command_name    check_cpuload_snmp
        command_line    $USER1$/check_cpuload_snmp $HOSTADDRESS$ $ARG1$ $ARG2$ $ARG3$
        }

# 'check_diskspace_snmp' command definition
define command{
        command_name    check_diskspace_snmp
        command_line    $USER1$/check_diskspace_snmp $HOSTADDRESS$ $ARG1$ $ARG2$ $ARG3$ $ARG4$
        }

# 'check_tomcat' command definition
define command{
        command_name    check_tomcat
        command_line    $USER1$/check_tomcat -H $HOSTADDRESS$ -P $ARG1$ -u $ARG2$ -p $ARG3$ -w $ARG4$ -c $ARG5$
        }


# 'check_ntp' command definition
define command{
        command_name    check_ntp
        command_line    $USER1$/check_ntp -H $HOSTADDRESS$
        }

define command{
        command_name    check_ntp_ext
        command_line    $USER1$/check_ntp -H $ARG1$
        }

# nrpe
define command{
        command_name    check_nrpe
        command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -t 30 -c $ARG1$
        }

# scheduler
define command{
        command_name    check_scheduler
        command_line    $USER1$/check_scheduler -H $HOSTADDRESS$ -p $ARG1$ -e $ARG2$ -v 1
        }

# log
define command{
        command_name    check_log
        command_line    $USER1$/check_log -F $ARG1$ -O $ARG2$ -q $ARG3$
        }

# ESX checks
define command {
        command_name    check_esx
        command_line    $USER1$/check_esx2 -N -H $HOSTADDRESS$ -C "$ARG1$" -l LIST
}
define command {
        command_name    check_esx_io
        command_line    $USER1$/check_esx3 -H $HOSTADDRESS$ -u root -p "$ARG1$" -l io -t 20
}
define command {
        command_name    check_esx_dc
        command_line    $USER1$/check_esx3 -D $HOSTADDRESS$ -u root -p "$ARG1$" -l $ARG2$ -s $ARG3$ -t 20
}
define command {
        command_name    check_esx_dc6
        command_line    $USER1$/check_esx4 -D $HOSTADDRESS$ -u "$ARG1$" -p "$ARG2$" -l $ARG3$ -s $ARG4$ -t 20
}
define command {
        command_name    check_esx_host
        command_line    $USER1$/check_esx3 -H $HOSTADDRESS$ -u root -p "$ARG1$" -l $ARG2$ -s $ARG3$ -t 20
}
define command {
        command_name    check_esx_host6
        command_line    $USER1$/check_esx4 -H $HOSTADDRESS$ -u "$ARG1$" -p "$ARG2$" -l $ARG3$ -s $ARG4$ -t 20
}
define command {
        command_name    check_esx_mem
        command_line    $USER1$/check_esx3 -H $HOSTADDRESS$ -u root -p "$ARG3$" -l mem -s usage -t 20 -w "$ARG1$" -c "$ARG2$"
}
define command {
        command_name    check_esx_mem6
        command_line    $USER1$/check_esx4 -D $HOSTADDRESS$ -u "$ARG1$" -p "$ARG2$" -l mem -s usage -t 20 -w "$ARG3$" -c "$ARG4$"
}
define command {
        command_name    check_esx_mem7
        command_line    $USER1$/check_esx5 -D $HOSTADDRESS$ -u Administrator -p $USER11$ -l mem -s usage -t 20 -w "$ARG2$" -c "$ARG3$"
}
define command {
        command_name    check_esx_cpu
        command_line    $USER1$/check_esx3 -H $HOSTADDRESS$ -u root -p "$ARG3$" -l cpu -s usage -t 20 -w "$ARG1$" -c "$ARG2$"
}
define command {
        command_name    check_esx_cpu6
        command_line    $USER1$/check_esx4 -H $HOSTADDRESS$ -u "$ARG1$" -p "$ARG2$" -l cpu -s usage -t 20 -w "$ARG3$" -c "$ARG4$"
}
define command {
        command_name    check_esx_run
        command_line    $USER1$/check_esx3 -H $HOSTADDRESS$ -u root -p "$ARG1$" -l runtime -s status -t 20 
}
define command {
        command_name    check_esx_disk
        command_line    $USER1$/check_esx3 -H $HOSTADDRESS$ -u root -p "$ARG3$" -l vmfs -o used -t 20 -w "$ARG1$" -c "$ARG2$"
}
define command {
        command_name    check_esx_vhost
        command_line    $USER1$/check_esx2 -N -H $HOSTADDRESS$ -C "$ARG1$" -v "$ARG2$" -l STATE
}
define command {
        command_name    check_esx_vhost_mem
        command_line    $USER1$/check_esx2 -N -H $HOSTADDRESS$ -C "$ARG1$" -v "$ARG2$" -l MEM -w "$ARG3$" -c "$ARG4$"
}

# windows event log definition
define command{
       command_name           check_win_eventlog
       command_line           $USER1$/check_win_eventlog.pl -H $HOSTADDRESS$ -s $ARG1$ -l $ARG2$ -q $ARG3 -t $ARG4$
}

define command {
        command_name    check_emc
        command_line    $USER1$/check_emc.sh -H $HOSTADDRESS$ -U "$ARG1$" -A "$ARG2$" -t "$ARG3$"
}

define command {
        command_name    check_nfs_health
        command_line    $USER1$/check_nfs_health -i $ARG1$
}

################################################################################
#
# SAMPLE PERFORMANCE DATA COMMANDS
#
# These are sample performance data commands that can be used to send performance
# data output to two text files (one for hosts, another for services).  If you
# plan on simply writing performance data out to a file, consider using the 
# host_perfdata_file and service_perfdata_file options in the main config file.
#
################################################################################


# 'process-host-perfdata' command definition
define command{
	command_name	process-host-perfdata
	command_line	/usr/bin/printf "%b" "$LASTHOSTCHECK$\t$HOSTNAME$\t$HOSTSTATE$\t$HOSTATTEMPT$\t$HOSTSTATETYPE$\t$HOSTEXECUTIONTIME$\t$HOSTOUTPUT$\t$HOSTPERFDATA$\n" >> /u/prog/nagios/var/host-perfdata.out
	}


# 'process-service-perfdata' command definition
define command{
	command_name	process-service-perfdata
	command_line	/usr/bin/printf "%b" "$LASTSERVICECHECK$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICESTATE$\t$SERVICEATTEMPT$\t$SERVICESTATETYPE$\t$SERVICEEXECUTIONTIME$\t$SERVICELATENCY$\t$SERVICEOUTPUT$\t$SERVICEPERFDATA$\n" >> /u/prog/nagios/var/service-perfdata.out
	}


#Check License Zend Server
define command {
    command_name zs-license
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c zs-license
}

#Check Synology
define command {
    command_name    check_synology
    command_line    $USER1$/check_synology -2 Public -h $HOSTADDRESS$ -W 60 -C 70 -w 90 -c 95
}


# 'check_disk_snmp' command definition
define command{
        command_name    check_disk_snmp
        command_line    $USER1$/check_disk_snmp -H $ARG1$ -w $ARG2$ -c $ARG3$ -d $ARG4$
}
